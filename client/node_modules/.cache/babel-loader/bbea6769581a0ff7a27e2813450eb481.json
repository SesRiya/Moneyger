{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\"; //Login actions\n\nexport const loginUserAction = createAsyncThunk(\"user/login\", async (payload, _ref) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //htttp address\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/login`, payload, config); // save user into localstorage when logged in\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //Register actions\n\nexport const registerUserAction = createAsyncThunk(\"user/register\", async (payload, _ref2) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref2;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    //htttp address\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/register`, payload, config);\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //slices\n// get user from local storage to store in our store\n\nconst userLoginFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : undefined;\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    userAuth: \"Marley\"\n  },\n  extraReducers: builder => {\n    // handle pending state for login action\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); // handle success state\n\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.msg;\n      state.userServerError = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.msg;\n    }); // handle pending state for register action\n\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.userLoading = true;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); // handle success state\n\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.userAuth = action === null || action === void 0 ? void 0 : action.payload;\n      state.userLoading = false;\n      state.userAppErr = undefined;\n      state.userServerErr = undefined;\n    }); //handle rejected state\n\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.userLoading = false;\n      state.userAppErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.msg;\n      state.userServerError = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.msg;\n    });\n  }\n});\nexport default usersSlices.reducer;","map":{"version":3,"sources":["D:/VIC U/SWEN 504/Moneyger/client/src/redux/slices/users/usersSlices.js"],"names":["createAsyncThunk","createSlice","axios","baseURL","loginUserAction","payload","rejectWithValue","getState","dispatch","config","headers","data","post","localStorage","setItem","JSON","stringify","error","response","registerUserAction","userLoginFromStorage","getItem","parse","undefined","usersSlices","name","initialState","userAuth","extraReducers","builder","addCase","pending","state","action","userLoading","userAppErr","userServerErr","fulfilled","rejected","msg","userServerError","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport baseURL from \"../../../utils/baseURL\";\r\n\r\n//Login actions\r\n\r\nexport const loginUserAction = createAsyncThunk(\r\n  \"user/login\",\r\n  async (payload, { rejectWithValue, getState, dispatch }) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      //htttp address\r\n      const { data } = await axios.post(\r\n        `${baseURL}/users/login`,\r\n        payload,\r\n        config\r\n      );\r\n\r\n      // save user into localstorage when logged in\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      return data;\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        throw error;\r\n      }\r\n      return rejectWithValue(error?.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\n//Register actions\r\n\r\nexport const registerUserAction = createAsyncThunk(\r\n  \"user/register\",\r\n  async (payload, { rejectWithValue, getState, dispatch }) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      //htttp address\r\n      const { data } = await axios.post(\r\n        `${baseURL}/users/register`,\r\n        payload,\r\n        config\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        throw error;\r\n      }\r\n      return rejectWithValue(error?.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\n//slices\r\n// get user from local storage to store in our store\r\n\r\nconst userLoginFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : undefined;\r\nconst usersSlices = createSlice({\r\n  name: \"users\",\r\n  initialState:{\r\n    userAuth:\"Marley\",\r\n   },\r\n  extraReducers: (builder) => {\r\n    // handle pending state for login action\r\n    builder.addCase(loginUserAction.pending, (state, action) => {\r\n      state.userLoading = true;\r\n      state.userAppErr = undefined;\r\n      state.userServerErr = undefined;\r\n    });\r\n\r\n    // handle success state\r\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\r\n      state.userAuth = action?.payload;\r\n      state.userLoading = false;\r\n      state.userAppErr = undefined;\r\n      state.userServerErr = undefined;\r\n    });\r\n\r\n    //handle rejected state\r\n    builder.addCase(loginUserAction.rejected, (state, action) => {\r\n      state.userLoading = false;\r\n      state.userAppErr = action?.payload?.msg;\r\n      state.userServerError = action?.error?.msg;\r\n    });\r\n\r\n    // handle pending state for register action\r\n    builder.addCase(registerUserAction.pending, (state, action) => {\r\n      state.userLoading = true;\r\n      state.userAppErr = undefined;\r\n      state.userServerErr = undefined;\r\n    });\r\n\r\n    // handle success state\r\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\r\n      state.userAuth = action?.payload;\r\n      state.userLoading = false;\r\n      state.userAppErr = undefined;\r\n      state.userServerErr = undefined;\r\n    });\r\n\r\n    //handle rejected state\r\n    builder.addCase(registerUserAction.rejected, (state, action) => {\r\n      state.userLoading = false;\r\n      state.userAppErr = action?.payload?.msg;\r\n      state.userServerError = action?.error?.msg;\r\n    });\r\n  },\r\n});\r\n\r\nexport default usersSlices.reducer;\r\n"]},"metadata":{},"sourceType":"module"}